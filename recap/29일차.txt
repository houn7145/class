JAVA DTO, DAO

DAO(Data Access Object)
데이터베이스의 data에 접근하기 위한 객체
DataBase에 접근 하기 위한 로직 & 비지니스 로직을 분리하기 위해 사용하며
직접 DB에 접근하여 data를 삽입, 삭제, 조회 등 조작할 수 있는 기능을 수행
코드의 간결화 및 모듈화, 유지보수 등의 목적을 위해 별도의 DAO 클래스를 생성하여 사용

일반적으로 한 개의 DB 테이블 당 한 개의 DAO 클래스를 작성하고
각 DAO 클래스는 INSERT, SELECT, UPDATE, DELETE 쿼리를 실행해 주는 메소드를 제공함
이 메소드들은 하나의 SQL 명령을 전달하여 실행된 결과를 반환하도록 작성하며
SQL 명령을 전달하면 DTO(테이블의 칼럼과 매핑되는 프로퍼티를 갖는 자바 클래스)를 사용하여 DB에 접근함
결과적으로 테이블로부터 데이터를 읽어와 자바 객체로 변환하거나
또는 자바 객체의 값을 테이블에 저장함

DAO는 하나의 객체에 여러 쿼리를 담는 것이기에 singleton 방식으로 객체를 생성해야 함
외부에서 직접 생성하지 못하도록 private 선언하고
main에서 new 생성자를 통해서 객체를 만들 수 있는 길을 차단하고 메서드를 통해서 객체를 생성하도록 만들어야 함
static으로 오직 1개의 객체만 생성해야하며
생성된 객체는 static 객체화를 통해 하나의 객체만이 존재하도록 만들어야 함

처음 실행단계: 객체가 null 값
그 이후: return을 통해 이미 존재하는 객체를 계속해서 불러오는 방식

DTO(Data Transfer Onject)
계층 간 데이터 교환을 하기 위해 사용하는 객체
DTO는 로직을 가지지 않는 순수한 데이터 객체이며 그 속성의 접근을 위한 getter 및 setter 메소드만을 가지고 있음




