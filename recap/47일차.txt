function을 이용한 React 컴포넌트화

class를 이용한 방법보다 사용성이 많고 로직이 더 짧으며  
함수형 컴포넌트는 클래스형 컴포넌트보다 선언하기가 좀 더 편하고 메모리 자원을 덜 사용한다는 장점이 있음
또한 ES6부터는 화살표 함수도 사용이 가능

최신 리액트에 hook(훅)이라는 기능이 도입되면서 함수 방식 방식에서도 내부적으로 상태를 다룰 수 있게 되었고
컴포넌트 라이프 사이클에 따라서 해야 할 작업을 정의할 수 있게 됨

useState를 사용해 상황에 맞는 값으로 바꿀 수 있음
함수형 컴포넌트에서도 가변적인 상태를 지니고 있을 수 있게 해주며
함수형 컴포넌트 안에서 상태를 관리해야 하는 일이 생기면 이 Hooks를 이용하면 됨
import React, {useState} from 'react'; 필요

useState는 배열을 반환
배열의 [0]은 함수에 넣은 인자값 그 자체
배열의 [1]은 새로 넣은 인자값을 반영하여 다시 함수를 실행함  ==> [0]의 값은 새로넣은 인자값으로 변함
단 orginal 인자값과 new 인자값을 비교했을때 같은 데이터라면 컴포넌트를 다시 랜더링하지 않음

