JSP 웹프로그래밍

SP 태그의 개념 이해
Servlet은 JAVA언어를 이용하여 문서를 작성하고 출력객체(PrintWriter객체)를 이용하여 HTML코드를 삽입함
JSP는 Servlet과 반대로 HTML코드에 JAVA언어를 삽입하여 동적 문서를 만들 수 있음
HTML코드안에 JAVA코드를 삽입하기 위해서는 다음과 같은 태그를 이용
지시자	: <%@	   %>	: 페이지 속성 ex.import, page
주석	: <%--	 --%> : 응답 페이지에서는 이 주석은 보이지 않음, WAS에서 이 주석은 제거하고 응답페이지를 만듦
선언	: <%!	   %>	: 전역변수 및 메소드 선언
표현식	: <%=	   %>	: 결과값 출력
스크립트릿 : <%	   %>	: JAVA 코드
액션태그    : <jsp:action></jsp:action> : 표준액션태그  ex.파일연결 및 자바빈 연결
     <c:set></c:set>          : 커스텀 액 션태그

JSP 동작 원리
클라이언트가 웹브라우저로 a.jsp를 요청하게 되면 JSP컨테이너가 JSP파일을 Servlet파일(a_jsp.java)로 변환되며 
Servlet파일(.java)은 컴파일 된 후 클래스 파일(.class)로 변환되고, 요청한 클라이언트한테 html파일 형태로 응답함
= [웹 브라우저 요청] → [a.jsp 를 a_ jsp.java로 변환] → [a_ jsp.java를 a_ jsp.class로 변환] → [웹브라우저에 HTML 형태로 응답]

JSP 내부 객체
개발자가 객체를 생성하지 않고 바로 사용할 수 있는 객체가 내부객체
JSP에서 제공되는 내부객체는 JSP컨테이너에 의해 Servlet으로 변화될 때 자동으로 객체가 생성
대표적인 내부 객체
입출력 객체 : request, response, out
서블릿 객체 : application, page, config
세션 객체 : session
예외 객체 : exception

JSP 태그들
스크립트릿, 선언, 표현식 : JSP문서안에 JAVA언어를 넣기 위한 방식들 -> 이 세개를 묶어 scriptlet이라 함
스크립트릿(scriptlet) : <% java 코드 %> 

선언(declaration) : <%! java 코드 기술 %>
변수 또는 메소드 선언할 때 사용. 여기서 선언된 변수 및 메소드는 페이지 어느곳에서나 사용가능한 전역의 의미로 사용됨

표현식(expression) : <%= java 코드 기술 %>
JSP 페이지 내에서 사용되는 변수의 값 또는 메소드 호출 결과값을 출력하기 위해 사용, (;)를 사용하지 않음

지시자
; JSP페이지의 전체적인 속성을 지정할 때 사용, page, include, taglib 가 있으며 <%@  속성 %>형태
page : 해당 페이지의 전체적인 속성 지정 주로 사용되는 언어 지정 및 import문을 많이 사용, 문서 타입(html, excel..)
include : 별도의 페이지를 현재 페이지에 사용 (footer 등 모든 페이지에서 반복되는 작업들에 이용)
taglib : 태그라이브러리(사용자가 만든 tag들)의 태그 사용하며 태그라이브러리를 사용하기 위해 taglib지시자 사용

JSP 내부 객체
request 객체 : 웹브라우저를 통해 서버에 어떤 정보를 요청하는 것을 request라 하며 이러한 요청 정보는 request 내부객체가 관리함
getParameter(String name) : name에 해당하는 파라미터 값을 구함
getParameterNames() : 모든 파라미터 이름을 구함
getParameterValues(String name) : name에 해당하는 파라미터값들을 구함
getContextPath() : 웹어플리케이션의 컨텍스트 패스(http://localhost:8181/prjName/folderName/ex.jsp중 /prjName)를 얻음
getMethod() : get방식과 post방식을 구분할 수 있음
getSession() : 세션 객체를 얻음
getProtocol() : 해당 프로토콜을 얻음
getRequestURL() : 요청 URL를 얻음
getRequestURI() : 요청 URI를 얻음
getServerPort() : 포트번호를 얻음

response 객체 - 웹브라우저의 요청에 응답하는 것을 response한다고 하며 이러한 응답(response)의 정보는 response 내부객체가 갖고 있음
doGet, doPost 메서드의 두번째 파라미터와 동일
객체타입 : javax.servlet.http.HttpServletResponse
getCharacterEncoding() : 응답할때 문자의 인코딩
addCookie(Cookie) : 쿠키를 지정
sendRedirect(URL) : 지정한 URL로 이동

out : 웹 브라우저로 HTML 코드를 출력하는 기능
객체 타입 : javax.servlet.jsp.JspWriter
PrintWriter처럼 스트림 형태로 데이터를 출력하는 클래스는 송신측과 수신측 사이에 가상의 통로를 만듦 out 내장 객체는 이 통로를 관리하는 변수
page 지시자의 buffer 애트리뷰트를 이용하면 출력 버퍼의 크기를 바꿀 수 있으며 buffer 애트리뷰트는 버퍼의 크기를 kb 단위의 정수로 써야하고 kb라는 단위 표시를 붙여 써야 함

application : JSP 페이지가 속하는 웹 애플리케이션에 관련된 기능
객체 타입 : javax.servlet.ServletConfig

session : 세션에 관련된 기능
객체 타입 : javax.servlet.http.httpSession

exception : 익셉션 객체
객체 타입 : java.lang.Throwable