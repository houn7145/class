예외페이지
완벽한 코딩을 했다고 하더라도 예외가 발생할 수 있기에 사용자로부터 하여금 사이트를 이용하는데 있어
불편함을 주지 않기 위해 예외페이지를 만드는게 좋음

지시자를 통한 예외처리
예외가 발생할 수 있는 jsp문서에 지시자를 통하여 아래와 같이 입력 
<%@ page errorPage="예외처리페이지.jsp" %>
예외를 처리할 jsp문서에는 지시자를 통하여 아래와 같이 입력
<%@ page isErrorPage="true" %>
<%response.setStatus(200); %> // 모든 브라우저에서 예외처리한 페이지를 출력하기 위해 사용함
예외코드
200 : 정상
403 : 접근이 거부된 문서를 요청
404 : 해당 문서를 찾을 수 없을 때
405 : 리소스를 허용 안 함
500 : 문법오류나 예외 발생 상태
407 : 프록시 인증을 받지 못하는 경우

web.xml 파일을 이용한 예외처리
<error-page>
  	<error-code>예외코드</error-code>
  	<location>예외처리페이지.jsp</location>
</error-page>

<error-page>
  	<exception-type>메소드주소전부입력</exception-type>
  	<location>예외처리페이지</location>
</error-page>

자바빈 - java언어의 데이터와 기능으로 이루어진 클래스
반복적인 작업을 효율적으로 하기 위해 빈을 사용함
jsp페이지를 만들고 그 안에서 액션태그를 이용하여 빈을 사용하며 빈의 내부에서 내부 데이터를 처리함
빈을 활용하기 위해서는 매개변수 없는 생성자와 setter, getter가 필수적으로 만들어야 함

빈 관련 액션태그 
useBean : 특정 빈을 사용한다고 명시할 때 사용
<jsp:useBean id="객체이름" class="클래스이름" scope="사용범위" />

scope
page : 빈이 생성된 페이지 내에서만 사용 가능
request : 요청된 request 범위 내에서만 사용 가능
session : 하나의 웹 브라우저 당 1개의 session객체 생성. 웹브라우저 생명주기와 동일하게 사용 가능
application : 하나의 웹어플리케이션 당 1개의 application 객체 생성. 웹 어플리케이션 생명주기와 동일하게 사용 가능

setProperty : 데이터 값을 설정할 때 사용. 자바에서의 setter역할
getProperty : 데이터 값을 가져올 때 사용. 자바에서의 getter 역할