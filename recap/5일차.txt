메소드
- 작업을 수행하기 위한 명령문의 집합
- 로직을 만들어 놓고 필요할 때 마다 데이터를 주면 메소드가 알아서 결과 값을 반환
- 어떤 값을 입력받아서 처리하고 그 결과 값을 되돌려 줌
(입력 받는 값이 없을 수도 있고 결과를 돌려주지 않을 수도 있다)
- 반복적으로 수행되는 여러 문장을 메소드로 작성하면 편리하다

ex) 
접근제한자 [static] 리턴type 메소드명([매개변수1, 매개변수2,..]) { 
// return이 없을 경우 리턴type은 void
	처리할 프로세스들
	[return 리턴값;]
}

메소드의 효율과 한계 
- 메소드를 이용하면 로직의 재사용이 가능하여 코딩의 길이가 짧아지므로 개발에 있어 효율적임
- 절차지향언어에서 중복된 로직을 메소드의 사용으로 인해 효율성을 높일 수 있음
- 다만,  한 문서 내에 메소드의 수가 많아 질 경우 복잡해지고 추후 유지 보수에 있어 많은 어려움이 발생됨

객체지향 프로그램
- 객체란 관련성 있는 데이터와 메소드가 함께 있는 구성체를 뜻함


