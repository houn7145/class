JSTL(JSP Standard Tag Library)
jsp의 경우 html 태그와 같이 사용되어 전체적인 코드의 가독성이 매우 떨어짐
(서블릿은 순수 자바코드라 일관적이고 가독성도 높지만 jsp의 경우 jsp태그와 html태그가 반복적으로 석여있어 가독성이 많이 떨어짐)
이러한 단점을 보완하고자 만들어진 태그 라이브러리가 jstl
jstl의 경우 우리가 사용하는 tomcat 컨테이너에 포함되어 있지 않으므로 별도로 설치를 해야 사용이 가능함

jstl을 가지고 할 수 있는 일
1. 간단한 프로그램 로직의 구사(자바의 변수 선언, if문, for문 등에 해당하는 로직)
2. 다른 JSP 페이지 호출(<c:redirect>, <c:import>)
3. 날짜, 시간, 숫자의 포맷
4. JSP 페이지 하나를 가지고 여러 언어의 웹 페이지 생성

Core : Core 라이브러리는 기본적인 라이브라리로 출력, 제어문, 반복문 같은 기능이 포함되어 있음
jsp페이지에서 prefix를 사용하기 위해서는 tagllib 지시자를 이용하여 라이브러리의 uri 식별자와 접두어를 연결해야 사용이 가능함
taglib 지시자는 다른 지시자와 마찬가지로 <%@로 시작해서 %>로 끝나며 속성값을 입력해 주어야 함
1. 출력 태그 <c:out>
<c:out value=“출력값” default=“기본값” escapeXml=“true or false”> false를 주면 특수기호를 해석
2. 변수 설정 태그 <c:set>
<c:set var=“변수명” value=“설정값” target=“객체” property=“값” scope=“범위”>어떤 객체의 속성값을 변수로 지정
3. 변수를 제거하는 태그 <c:remove>
<c:remove var=“변수명” scope=“범위”>
4. 예외 처리 태그 <c:catch>
<c:catch var=“변수명”>
5. 제어문(if)태그 <c:if>
<c:if test=“조건” var=“조건 처리 변수명” scope=“범위”>
6. 제어문 태그 : <c:choose>
<c:choose>
<c:when test=“조건1”> 처리 내용 </c:when>
<c:when test=“조건2”> 처리 내용 </c:when>
<c:when test=“조건3”> 처리 내용 </c:when>
<c:otherwise> 처리 내용 </c:otherwise>
</c:choose>
7. 반복문(for) 태그 : <c:forEach>
<c:forEach items=“객체명” begin=“시작 인덱스” end=“끝 인덱스” step=“증감식” var=“변수명” varStatus=“상태변수”>
<c:forTokens var=“변수명” item=전체스트링 delims=구분자>
8. 페이지 이동태그 <c:redirect url=”url”>
<c:redirect url=“url”>

fmt : 국제화/형식화 액션 기능을 제공해주는 라이브러리
1. 국제화는 다국어 내용을 처리하고 형식화는 날짜와 숫자 형식 등을 처리함
2. 인코딩 관련 태그 <fmt:requestEncoding>
 - request 객체로부터 전달 받은 값들을 인코딩할 때 사용
3. 국제화 관련 태그 <fmt:setLocale> <fmt:timeZone> <fmt:setTimeZone> <fmt:bundle> <fmt:setBundle> <fmt:message> <fmt:param>
4. 형식화 관련 태그 
	- <fmt:formatNumber> <fmt:formatNumber value=”값” type=”타입” pattern=”패턴” currencyCode=”값”
	- <fmt:formatDate> <fmt:formatDate value=”값” type=”타입” dateStyle=”값” timeStyle=”값” pattern=”패턴” timeZone=”값” var=”변수명” scope=”범위”>
