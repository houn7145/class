접근제한과 static, 패키지

접근제한 - 클래스의 데이터나 메소드에 대해서 다른 클래스로부터 접근을 제한하는 것

public : 접근을 제한하지 않음, 다른 모든 클래스에서 사용 가능
protected : 해당 클래스와 동일한 패키지에 있거나 상속받은 클래스일 경우에만 사용 가능
default : 접근제어자를 명시하지 않은 경우의 디폴드 접근제어자. 같은 패키지내의 클래스들은 public 권한을 갖고 접근가능
private : 해당 클래스만이 이 멤버를 사용 가능, 외부객체에서는 접근 불가

ex)
private int privateEx; 	// 같은 클래스내에서만
protected int protectedEx; 	// 같은 패키지나 상속받은 클래스에서 사용
int defaultEx; 		// 디폴트접근제한 : 같은 패키지에서만 사용
public int publicEx; 	// 아무데서나 사용

static : 클래스변수(static 변수)

- 객체들끼리 공유하고 싶은 정보가 있을 때 사용
클래스를 만들고 사용할 때는 new 연산자를 통해 객체로 만들어서 사용함

- 객체변수(객체속성)는 객체가 생성될 때마다 각 객체 안의 속성 변수들이 생성되지만, 
클래스 변수는 클래스로부터 생성된 객체들의 수와 상관없이 하나만 생성됨
한 클래스로부터 생성된 모든 객체들은 클래스 변수를 공유
클래스 변수를 이용하여 객체들 사이의 통신에 사용하거나 객체들의 공통속성을 나타낼 수 있음
객체변수와 달리 클래스 변수(static 변수)는 클래스 이름을 통하여 접근 가능함

static의 장점과 단점
객체 생성을 하지 않고도 사용할 수 있다는 장점이 있지만, 항상 메모리에 상주해 있으므로 프로젝트가 커지고
시스템이 오랜 시간 동안 돌아가게 되면 시스템 운영속도가 느려지므로 static의 사용은 신중해야 함

fianal - 종단변수
static 변수로 사용되는 대표적인 예
원주율과 같이 값이 바뀌지 않는 상수를 final 변수로 정의해놓고 사용하면 편리함
ex) public static final double PI = 3.14159265; 
변수 이름은 알파벳 대문자로 지정하는것이 통상적

패키지 - 프로그래밍에서 여러 클래스를 관리하기 위해 기능적으로 영향을 미칠 수 있는 클래스끼리 묶어 놓고, 
접근 범위 안에 효과적으로 호출하기 위해서 사용하는 개념

JAVA내에선 관련있는 클래스들을 패키지로 그룹지어 관리하는 것
JAVA API(Application Programming Interface) : 자바에서 기본적으로 제공되는 클래스의 설명들을 볼 수 있음

import - 다른 패키지의 클래스를 가져오기 위함
패키지를 만들고 클래스를 만든 후 서로 다른 패키지의 클래스를 사용하러고 할 때는 반드시 import 키워드를 사용

ex) import com.lect.ex.*; 
com.lect.ex.* 패키지 안에 있는 클래스를 사용하기 위하여 사용
다만 동일한 패키지의 클래스를 사용할 때는 import가 필요 없음



