상속(Inheritance)
- 부모클래스가 가지고 있는 속성과 메서드를 활용할 수 있는 개념 
프로그래밍에서도 어떤 클래스가 다른 클래스로부터 데이터(속성)와 메소드(기능)를 상속받을 수 있음
이럴 경우 상속받은 객체는 상속해 준 객체의 데이터 및 메소드를 이용할 수 있고 또는 변경도 가능함
상속을 이용할 경우 프로그래밍 시간을 단축시킬 수 있으며, 상속받고자 하는 기존의 클래스는 이미 검증된 클래스이므로 시행착오를 줄일 수 있음

상속의 문법
접근제어자 [final/abstract] class 클래스이름 extends 상위클래스(super class) {
	추가할 멤버변수선언;
	생성자;
	추가할 메소드선언;
}

Object 클래스
- 자바속 모든 클래스의 최고 부모클래스
부모클래스가 없는 클래스는 자동적으로 Object클래스를 상속받게 됨

override(오버라이드 : 재정의)
- 인자의 타입이 다르면 같은 이름의 메소드라도 다른 기능으로 중복정의가 가능한 것
부모 클래스의 메소드를 자식 클래스에서 재정의 

자식 클래스가 부모 클래스를 상속하여 자식한테 없는 메소드를 호출하면 부모클래스에 가서 해당 메소드를 찾게 됨
override의 장점은 잘 만들어진 클래스를 상속받아 일부 메소드를 수정(재정의) 할 수 있음
그러나 자식클래스에서 부모클래스를 override하면 부모클래스의 메소드는 사용할 수가 없음

super
- 부모를 찾는 키워드
자식 클래스에서 부모클래스의 메소드를 사용하고자 할 때 super키워드를 사용

super의 문법
하위 클래스에 의해 가려진 상위클래스의 멤버변수나 메소드에 접근할 때
        super.객체변수
        super.메소드이름(매개변수)

상위클래스의 생성자를 호출할 때
        super(매개변수); super(매개변수)문장은 반드시 첫 번째 라인에 와야 함
        super(); 매개변수 없는 슈퍼클래스의 생성자 호출

객체의 명시적 형변환
instanceof (변수의 타입 때문에 실행불가일 경우 instanceof를 사용하여 형변환)


